{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,SAC9BC,UAAWF,SAASC,cAAc,kBAClCE,cAAeH,SAASC,cAAc,iBACtCG,WAAYJ,SAASC,cAAc,mBACnCI,IAAKL,SAASC,cAAc,oBAe9B,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,uBAAqBN,QAAiBC,OAE9CM,EAAK,sBAAoBP,QAAiBC,MAAU,GACrDA,EAAM,G,CAIZ,SAASQ,EAAUC,GACjBC,EAAAtB,GAASuB,OAAOC,QAAQH,E,CAG1B,SAASI,EAAQC,GACfJ,EAAAtB,GAASuB,OAAOI,QAAQD,E,CA7B3BxB,EAAKC,MAAMyB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIC,EAAeC,OAAO9B,EAAKI,UAAU2B,OAEzC,IAAK,IAAIC,EAAI,EAAGA,GAAKhC,EAAKM,WAAWyB,MAAOC,GAAK,EAC/CxB,EAAcwB,EAAGH,GAAcI,KAAKf,GAAWgB,MAAMX,GACrDM,GAAgBC,OAAO9B,EAAKK,cAAc0B,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst revs = {\n  forma: document.querySelector('.form'),\n  delayForm: document.querySelector('[name=\"delay\"]'),\n  stepDelayForm: document.querySelector('[name=\"step\"]'),\n  amountForm: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('[type=\"submit\"]'),\n};\n\nrevs.forma.addEventListener('submit', onFormSubmit);\n\n function onFormSubmit(evt) {\n   evt.preventDefault();\n   let delayPromise = Number(revs.delayForm.value);\n\n   for (let i = 1; i <= revs.amountForm.value; i += 1) {\n     createPromise(i, delayPromise).then(onSuccess).catch(onError);\n     delayPromise += Number(revs.stepDelayForm.value);\n   }\n }\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n};\n\n function onSuccess(result) {\n   Notiflix.Notify.success(result);\n }\n\n function onError(error) {\n   Notiflix.Notify.failure(error);\n }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n// =======================================================================================================================================================================================\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$revs","forma","document","querySelector","delayForm","stepDelayForm","amountForm","btn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onSuccess","result","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onError","error","failure","addEventListener","evt","preventDefault","delayPromise","Number","value","i","then","catch"],"version":3,"file":"03-promises.6cb58da3.js.map"}