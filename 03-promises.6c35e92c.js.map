{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,SAC9BC,UAAWF,SAASC,cAAc,kBAClCE,cAAeH,SAASC,cAAc,iBACtCG,WAAYJ,SAASC,cAAc,mBACnCI,IAAKL,SAASC,cAAc,oBAe9B,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDM,EAAK,sBAAuCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACnDA,E,IAIN,SAASS,EAAUC,GACjBC,EAAAvB,GAASwB,OAAOC,QAAQH,E,CAG1B,SAASI,EAAQC,GACfJ,EAAAvB,GAASwB,OAAOI,QAAQD,E,CA7B3BzB,EAAKC,MAAM0B,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAGJ,IAFA,IAAIC,EAAeC,OAAO/B,EAAKI,UAAU4B,OAEhCC,EAAI,EAAGA,GAAKjC,EAAKM,WAAW0B,MAAOC,GAAK,EAC/CzB,EAAcyB,EAAGH,GAAcI,KAAKf,GAAWgB,MAAMX,GACrDM,GAAgBC,OAAO/B,EAAKK,cAAc2B,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst revs = {\n  forma: document.querySelector('.form'),\n  delayForm: document.querySelector('[name=\"delay\"]'),\n  stepDelayForm: document.querySelector('[name=\"step\"]'),\n  amountForm: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('[type=\"submit\"]'),\n};\n\nrevs.forma.addEventListener('submit', onFormSubmit);\n\n function onFormSubmit(evt) {\n   evt.preventDefault();\n   let delayPromise = Number(revs.delayForm.value);\n\n   for (let i = 1; i <= revs.amountForm.value; i += 1) {\n     createPromise(i, delayPromise).then(onSuccess).catch(onError);\n     delayPromise += Number(revs.stepDelayForm.value);\n   }\n }\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n};\n\n function onSuccess(result) {\n   Notiflix.Notify.success(result);\n }\n\n function onError(error) {\n   Notiflix.Notify.failure(error);\n }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n// =======================================================================================================================================================================================\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$revs","forma","document","querySelector","delayForm","stepDelayForm","amountForm","btn","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","$ce04d3a99e08e73b$var$onSuccess","result","$parcel$interopDefault","Notify","success","$ce04d3a99e08e73b$var$onError","error","failure","addEventListener","evt","preventDefault","delayPromise","Number","value","i","then","catch"],"version":3,"file":"03-promises.6c35e92c.js.map"}